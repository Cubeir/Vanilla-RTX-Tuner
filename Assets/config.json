{
  "data": {
    "vanilla_rtx_uuid_header": "a5c3cc7d-1740-4b5e-ae2c-71bc14b3f63b",
    "vanilla_rtx_uuid_module": "af805084-fafa-4124-9ae2-00be4bc202dc",
    "vanilla_rtx_normals_uuid_header": "bbe2b225-b45b-41c2-bd3b-465cd83e6071",
    "vanilla_rtx_normals_uuid_module": "b2eef2c6-d893-467e-b31d-cda7bf643eaa",
    "vanilla_rtx_opus_uuid_header": "7c87f859-4d79-4d51-8887-bf450b2b2bfa",
    "vanilla_rtx_opus_uuid_module": "be0b22f0-ad13-4bbd-81ba-b457fd9e38b8"
  },
  "options": { // Stuff here are not user friendly, but it was right to expose them
    "remove_height_based_fog": false, // Removes max/min height values and replaces them with uniform density
    "excess_fog_multiplier_dampening_constant": 0.001, // Excess of one fog density multipler is dampened by this constant before being applied to other density parameters
    "excess_fog_multiplier_to_scattering_dampening_constant": 0.005, // Excess of fog density multiplier is damepened by this constant before being applied to scattering values
    "excess_scattering_multiplier_dampening_constant": 0.005, // Within scattering RGB triplets, if one is maxed early, the excess is applied to the rest using this constant
    "excess_emissive_intensity_dampening_constant": 0.1, // Excess of multipliers is multiplied by this constant before being applied to pixel
    "excess_normal_intensity_dampening_constant": 0.1 // Excess of multipliers is multiplied by this constant before being applied to pixel
  }
}